<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Peanut&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://peanutyu.github.io/"/>
  <updated>2022-04-08T07:46:24.613Z</updated>
  <id>https://peanutyu.github.io/</id>
  
  <author>
    <name>Peanut</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IM 即时通讯</title>
    <link href="https://peanutyu.github.io/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/IM%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/"/>
    <id>https://peanutyu.github.io/学习笔记/IM即时通讯/</id>
    <published>2022-04-06T07:56:37.000Z</published>
    <updated>2022-04-08T07:46:24.613Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;即时通讯（Instant Messaging，IM）即实时通信系统，允许两人或多人使用网络实时的传递文字、图片、语音来交流。比如我们每天使用的微信就属于IM系统&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>使用lerna管理多包JavaScript项目</title>
    <link href="https://peanutyu.github.io/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BD%BF%E7%94%A8lerna%E7%AE%A1%E7%90%86%E5%A4%9A%E5%8C%85JavaScript%E9%A1%B9%E7%9B%AE/"/>
    <id>https://peanutyu.github.io/学习笔记/使用lerna管理多包JavaScript项目/</id>
    <published>2021-01-07T09:04:50.000Z</published>
    <updated>2022-04-08T07:46:24.615Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近由于业务架构的调整我从公司业务前端组调到中台前端组，今年开始拥抱变化在新的部门可以取得更好的结果;言归正传由于我们这边中台架构使用的是微应用架构体系，基础代码都是从&lt;a href=&quot;https://github.com/umijs/qiankun&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;qiankun&lt;/a&gt;(&lt;strong&gt;蚂蚁金服微应用体系架构&lt;/strong&gt;)源码fork出来跟着我们自己的业务来进行一些定制化改造的,随着库代码量慢慢增加之后，单个包的管理就显得比较麻烦，为了方便库代码的共享，需要将代码库拆分成独立的包，比如qiankun、qiankun-router、qiankun-config、qiankun-micro-app、qiankun-micro-main(&lt;strong&gt;这里不暴露公司信息，统一以qiankun代替&lt;/strong&gt;)等包模块，于是我们就需要&lt;a href=&quot;https://github.com/lerna/lerna&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;lerna&lt;/a&gt;来优化以及管理多包项目。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://peanutyu.github.io/tags/JavaScript/"/>
    
      <category term="npm" scheme="https://peanutyu.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>使用karma+mocha构建web测试环境</title>
    <link href="https://peanutyu.github.io/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BD%BF%E7%94%A8karma+mocha%E6%9E%84%E5%BB%BAweb%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/"/>
    <id>https://peanutyu.github.io/学习笔记/使用karma+mocha构建web测试环境/</id>
    <published>2020-09-18T07:47:47.000Z</published>
    <updated>2022-04-08T07:46:24.615Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是karma&quot;&gt;&lt;a href=&quot;#什么是karma&quot; class=&quot;headerlink&quot; title=&quot;什么是karma&quot;&gt;&lt;/a&gt;什么是karma&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;karma是一个基于Node.js的JavaScript测试执行过程管理工具（Test Runner）。&lt;/strong&gt;换句话说，karma为测试框架准备宿主环境，可以让测试用例在真正的浏览器中运行。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>一次弄懂Event Loop</title>
    <link href="https://peanutyu.github.io/JavaScript/%E4%B8%80%E6%AC%A1%E5%BC%84%E6%87%82Event%20Loop/"/>
    <id>https://peanutyu.github.io/JavaScript/一次弄懂Event Loop/</id>
    <published>2019-11-06T06:33:54.000Z</published>
    <updated>2022-04-08T07:46:24.613Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近浏览了一些前端的面试题，发现很多题目里都有问到 Event Loop。正好我收集整理了部分相关的信息，于是也来说说我理解的 Event Loop。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="https://peanutyu.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://peanutyu.github.io/tags/JavaScript/"/>
    
      <category term="异步" scheme="https://peanutyu.github.io/tags/%E5%BC%82%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>你想知道的清除浮动的方法都在这了</title>
    <link href="https://peanutyu.github.io/Style/%E4%BD%A0%E6%83%B3%E7%9F%A5%E9%81%93%E7%9A%84%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95%E9%83%BD%E5%9C%A8%E8%BF%99%E4%BA%86/"/>
    <id>https://peanutyu.github.io/Style/你想知道的清除浮动的方法都在这了/</id>
    <published>2019-10-30T06:49:23.000Z</published>
    <updated>2022-04-08T07:46:24.614Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;浮动的产生&quot;&gt;&lt;a href=&quot;#浮动的产生&quot; class=&quot;headerlink&quot; title=&quot;浮动的产生&quot;&gt;&lt;/a&gt;浮动的产生&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;浮动float的产生原本是实现简单的布局，包括在一列文本中浮动的图像，文字环绕在它的左边或右边。你可能在报纸版面上看到过;包括有时候我们会希望几个div标签可以并排的出现在一行。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Style" scheme="https://peanutyu.github.io/categories/Style/"/>
    
    
      <category term="Style" scheme="https://peanutyu.github.io/tags/Style/"/>
    
  </entry>
  
  <entry>
    <title>Vue组件内通信方式整理</title>
    <link href="https://peanutyu.github.io/Vue/Vue%E7%BB%84%E4%BB%B6%E5%86%85%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F%E6%95%B4%E7%90%86/"/>
    <id>https://peanutyu.github.io/Vue/Vue组件内通信方式整理/</id>
    <published>2019-10-23T12:07:11.000Z</published>
    <updated>2022-04-08T07:46:24.613Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;props和-emit&quot;&gt;&lt;a href=&quot;#props和-emit&quot; class=&quot;headerlink&quot; title=&quot;props和$emit&quot;&gt;&lt;/a&gt;props和$emit&lt;/h2&gt;&lt;p&gt;父组件向子组件传递数据是通过props来传递的,子组件传递数据给父组件是通过$emit触发事件来做到的,父组件中使用v-on（@）的方式来实现。&lt;/p&gt;
    
    </summary>
    
      <category term="Vue" scheme="https://peanutyu.github.io/categories/Vue/"/>
    
    
      <category term="JavaScript" scheme="https://peanutyu.github.io/tags/JavaScript/"/>
    
      <category term="Vue" scheme="https://peanutyu.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>跨域的正确打开方式</title>
    <link href="https://peanutyu.github.io/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%B7%A8%E5%9F%9F%E7%9A%84%E6%AD%A3%E7%A1%AE%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/"/>
    <id>https://peanutyu.github.io/学习笔记/跨域的正确打开方式/</id>
    <published>2019-10-13T16:09:40.000Z</published>
    <updated>2022-04-08T07:46:24.616Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;跨域是前端开发日常工作中经常会面对的一个问题。日常工作中我们都会使用像webpack-dev-server构建我们的开发环境的接口代理、亦或是使用Charles等接口代理工具。上线后可以通过运维同学配合nginx或是cors等方案来解决。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>从输入URL回车之后发生了什么</title>
    <link href="https://peanutyu.github.io/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BB%8E%E8%BE%93%E5%85%A5URL%E5%9B%9E%E8%BD%A6%E4%B9%8B%E5%90%8E%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88/"/>
    <id>https://peanutyu.github.io/学习笔记/从输入URL回车之后发生了什么/</id>
    <published>2019-08-26T11:13:00.000Z</published>
    <updated>2022-04-08T07:46:24.613Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;从输入URL回车之后发生了什么&quot;&gt;&lt;a href=&quot;#从输入URL回车之后发生了什么&quot; class=&quot;headerlink&quot; title=&quot;从输入URL回车之后发生了什么&quot;&gt;&lt;/a&gt;从输入URL回车之后发生了什么&lt;/h1&gt;&lt;p&gt;从输入URL到页面展示总体来说分为以下一个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入地址&lt;/li&gt;
&lt;li&gt;根据地址栏输入的地址发生DNS解析查询其IP。&lt;/li&gt;
&lt;li&gt;通过IP地址与服务器建立TCP连接。&lt;/li&gt;
&lt;li&gt;客户端向服务端发送HTTP请求，如果服务器返回以 301 之类的重定向，浏览器根据相应头中的 location 再次发送请求&lt;/li&gt;
&lt;li&gt;服务器收到请求并响应HTTP请求，处理请求生成 html 代码，返回给浏览器。&lt;/li&gt;
&lt;li&gt;浏览器开始解析渲染页面并显示&lt;/li&gt;
&lt;li&gt;关闭连接&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>纯Css(Scroll Indicator)滚动指示器实现</title>
    <link href="https://peanutyu.github.io/Style/%E7%BA%AFcss%E6%BB%9A%E5%8A%A8%E8%BF%9B%E5%BA%A6%E6%9D%A1%E5%AE%9E%E7%8E%B0/"/>
    <id>https://peanutyu.github.io/Style/纯css滚动进度条实现/</id>
    <published>2019-08-05T11:11:52.000Z</published>
    <updated>2022-04-08T07:46:24.615Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Scroll Indicator称之为滚动指示器,是web页面中我们经常见到的一个效果。用户触发垂直方向上的滚动时，页面顶部会有一个类似进度条的效果，当内容滚动到页面最底部，则进度条填满页面的整个页面宽度。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Style" scheme="https://peanutyu.github.io/categories/Style/"/>
    
    
      <category term="Style" scheme="https://peanutyu.github.io/tags/Style/"/>
    
  </entry>
  
  <entry>
    <title>记录移动端键盘弹起导致底部上浮解决方案</title>
    <link href="https://peanutyu.github.io/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/%E8%AE%B0%E5%BD%95%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%94%AE%E7%9B%98%E5%BC%B9%E8%B5%B7%E5%AF%BC%E8%87%B4%E5%BA%95%E9%83%A8%E4%B8%8A%E6%B5%AE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://peanutyu.github.io/问题记录/记录移动端键盘弹起导致底部上浮解决方案/</id>
    <published>2019-07-15T12:08:23.000Z</published>
    <updated>2022-04-08T07:46:24.615Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在实际开发过程中，我们经常会遇到各种不同的浏览器内核以及不同的手机型号导致的一些前端兼容性问题。其中在H5页面中，由于移动端键盘的多样性，导致很多时候我们在唤起小键盘时，我们的页面经常会遇到一些错乱的问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="问题记录" scheme="https://peanutyu.github.io/categories/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="问题记录" scheme="https://peanutyu.github.io/tags/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>git高级用法——git cherry-pick</title>
    <link href="https://peanutyu.github.io/Git/git%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95%E2%80%94%E2%80%94git-cherry-pick/"/>
    <id>https://peanutyu.github.io/Git/git高级用法——git-cherry-pick/</id>
    <published>2019-04-20T07:47:12.000Z</published>
    <updated>2022-04-08T07:46:24.613Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近正巧看了一些面试题，其中有一道令我比较好奇，也就是我们今天要说到的&lt;strong&gt;git cherry-pick&lt;/strong&gt;;我们在简历当中都会写上精通或者熟练掌握git工作技巧。但绝大多数人也许只掌握一些简单的类似&lt;strong&gt;git status | pull | push | log&lt;/strong&gt;等操作,又或是使用&lt;strong&gt;sourcetree&lt;/strong&gt;等一些辅助工具来支持我们日常的工作需求，这篇博客主要记录和&lt;strong&gt;git cherry-pick&lt;/strong&gt;与之相关的git操作。&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="https://peanutyu.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://peanutyu.github.io/tags/Git/"/>
    
      <category term="实战经验" scheme="https://peanutyu.github.io/tags/%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Git Commit 规范以及 emoji 列表</title>
    <link href="https://peanutyu.github.io/Git/Git%20commit%20%E8%A7%84%E8%8C%83%E4%BB%A5%E5%8F%8A%20emoji%20%E5%88%97%E8%A1%A8/"/>
    <id>https://peanutyu.github.io/Git/Git commit 规范以及 emoji 列表/</id>
    <published>2019-04-10T08:19:42.000Z</published>
    <updated>2022-04-08T07:46:24.612Z</updated>
    
    <summary type="html">
    
      &lt;!-- # Git 版本规范 --&gt;
&lt;h1 id=&quot;分支&quot;&gt;&lt;a href=&quot;#分支&quot; class=&quot;headerlink&quot; title=&quot;分支&quot;&gt;&lt;/a&gt;分支&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;master&lt;/strong&gt;分支为主分支（保护分支），不能直接在master上进行修改代码或提交,通过&lt;strong&gt;MR&lt;/strong&gt;(merge Request)或者&lt;strong&gt;PR&lt;/strong&gt;(pull Request)的方式进行提交。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;preview&lt;/strong&gt;分支为预发分支， 所有测试完成需要上线的功能合并到该分支&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;develop、 test&lt;/strong&gt;分支为测试分支，所有开发完成需要提交测试的功能合并到该分支&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;feature/xxx&lt;/strong&gt;分支为功能开发分支，根据不同需求创建独立的功能分支，开发完成后合并到develop或test分支&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hotfix&lt;/strong&gt;分支为bug修复分支，需要根据实际情况对已发布的版本进行漏洞修复&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Git" scheme="https://peanutyu.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://peanutyu.github.io/tags/Git/"/>
    
      <category term="实战经验" scheme="https://peanutyu.github.io/tags/%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Weex常见问题解析</title>
    <link href="https://peanutyu.github.io/Weex/weex%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/"/>
    <id>https://peanutyu.github.io/Weex/weex常见问题解析/</id>
    <published>2019-03-29T05:56:07.000Z</published>
    <updated>2022-04-08T07:46:24.613Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是-Weex？&quot;&gt;&lt;a href=&quot;#什么是-Weex？&quot; class=&quot;headerlink&quot; title=&quot;什么是 Weex？&quot;&gt;&lt;/a&gt;什么是 Weex？&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Weex 是使用流行的 Web 开发体验来开发高性能原生应用的框架。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Weex" scheme="https://peanutyu.github.io/categories/Weex/"/>
    
    
      <category term="Vue" scheme="https://peanutyu.github.io/tags/Vue/"/>
    
      <category term="Weex" scheme="https://peanutyu.github.io/tags/Weex/"/>
    
  </entry>
  
  <entry>
    <title>[转]你不知道的JavaScript上卷读书笔记</title>
    <link href="https://peanutyu.github.io/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%BD%AC-%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84JavaScript%E4%B8%8A%E5%8D%B7%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>https://peanutyu.github.io/学习笔记/转-你不知道的JavaScript上卷读书笔记/</id>
    <published>2018-11-29T10:05:24.000Z</published>
    <updated>2022-04-08T07:46:24.616Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;链接：&lt;a href=&quot;https://juejin.im/post/5bfaa2e26fb9a04a0440b0e4&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://juejin.im/post/5bfaa2e26fb9a04a0440b0e4&lt;/a&gt;&lt;br&gt;来源：掘金&lt;/p&gt;
&lt;h1 id=&quot;第一部分-作用域和闭包&quot;&gt;&lt;a href=&quot;#第一部分-作用域和闭包&quot; class=&quot;headerlink&quot; title=&quot;第一部分 作用域和闭包&quot;&gt;&lt;/a&gt;第一部分 作用域和闭包&lt;/h1&gt;&lt;h2 id=&quot;第一章-作用域是什么&quot;&gt;&lt;a href=&quot;#第一章-作用域是什么&quot; class=&quot;headerlink&quot; title=&quot;第一章 作用域是什么&quot;&gt;&lt;/a&gt;第一章 作用域是什么&lt;/h2&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="https://peanutyu.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
